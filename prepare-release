#!/bin/sh

VERSION=$(dpkg-parsechangelog | sed -n -e '/^Version:/s/^Version: //p')
DISTRIBUTION=$(dpkg-parsechangelog | sed -n -e '/^Distribution:/s/^Distribution: //p')

if [ "$1" = 'pre-export' ]; then
	if [ "$DISTRIBUTION" = 'sid' ]; then
		echo >&2 '»sid« is not a valid distribution. Replace it with »unstable« for you'
		sed -i -e 's/) sid; urgency=/) unstable; urgency=/' debian/changelog
		DISTRIBUTION='unstable'
	elif [ "$DISTRIBUTION" = 'UNRELEASED' ]; then
		echo >&2 'WARNING: Remember to change to a valid distribution for release'
		VERSION="$VERSION~$(date +%Y%m%d)"
	fi

	if [ "$(date +%Y-%m-%d)" != "$(grep --max-count=1 '^"POT-Creation-Date: .*\n"$' po/apt-all.pot | cut -d' ' -f 2)" -o \
	     "$(date +%Y-%m-%d)" != "$(grep --max-count=1 '^"POT-Creation-Date: .*\n"$' doc/po/apt-doc.pot | cut -d' ' -f 2)" ]; then
		echo >&2 'POT files are not up-to-date. Execute »make update-po« for you…'
		make update-po
	fi

	sed -i -e "s/^PACKAGE_VERSION=\".*\"$/PACKAGE_VERSION=\"${VERSION}\"/" configure.in
elif [ "$1" = 'post-build' ]; then
	if [ "$DISTRIBUTION" != "UNRELEASED" ]; then
		echo >&2 "REMEMBER: Tag this release with »bzr tag ${VERSION}« if you are satisfied"
	else
		echo >&2 'REMEMBER: Change to a valid distribution before release'
	fi
else
	echo >&1 "Usage:\t$0 pre-export
\t$0 post-build

If you use »bzr builddeb« you can leave this script alone as it will
be run at the right places auto-magically. Otherwise you should use
»pre-export« to update po and pot files as well as version numbering.
»post-build« can be used to run some more or less useful checks later on."
fi
